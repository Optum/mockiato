---
  swagger: "2.0"
  info:
    version: "1.0.0"
    title: "Mockiato"
  basePath: "/api"
  schemes:
    - "http"
  consumes:
    - "application/json"
  produces:
    - "application/json"
  paths:
    /login:
      post:
        description: "returns an access token for the user"
        operationId: "getAccessToken"
        tags:
          - auth
        produces:
          - "application/json"
        parameters:
          -
            name: "authReq"
            in: "body"
            description: "your MS credentials"
            required: true
            schema:
                $ref: "#/definitions/AuthReq"
        responses:
          "200":
            description: "successful response"
            schema:
              $ref: "#/definitions/AuthRes"
          "401":
            description: "authentication failure"
            schema:
              $ref: "#/definitions/AuthRes"
    /services:
      post:
        description: "creates a new virtual service"
        operationId: "addVirtualService"
        tags:
          - services
        produces:
          - "application/json"
        parameters:
          -
            name: "service"
            description: "the service to create"
            in: "body"
            schema:
                $ref: "#/definitions/VirtualService"
          -
            name: "x-access-token"
            description: "your access token"
            in: "header"
            type: string
        responses:
          "200":
            description: "successful response"
            schema:
              $ref: "#/definitions/VirtualService"
    /services/{id}:
      get:
        description: "retrieves a virtual service"
        operationId: "getVirtualServiceByID"
        tags:
          - services
        produces:
          - "application/json"
        parameters:
          -
            name: "id"
            in: "path"
            description: "ID of service to fetch"
            required: true
            type: integer
            format: "int64"
        responses:
          "200":
            description: "successful response"
            schema:
              $ref: "#/definitions/VirtualService"
      put:
        description: "updates a virtual service"
        operationId: "updateVirtualService"
        tags:
          - services
        produces:
          - "application/json"
        parameters:
          -
            name: "id"
            in: "path"
            description: "ID of service to update"
            required: true
            type: integer
            format: "int64"
          -
            name: "service"
            description: "the service to update"
            in: "body"
            schema:
                $ref: "#/definitions/VirtualService"
          -
            name: "x-access-token"
            description: "your access token"
            in: "header"
            type: string
        responses:
          "200":
            description: "successful response"
            schema:
              $ref: "#/definitions/VirtualService"
      delete:
        description: "removes a virtual service"
        operationId: "removeVirtualService"
        tags:
          - services
        produces:
          - "application/json"
        parameters:
          -
            name: "id"
            in: "path"
            description: "ID of service to fetch"
            required: true
            type: integer
            format: "int64"
          -
            name: "x-access-token"
            description: "your access token"
            in: "header"
            type: string
        responses:
          "200":
            description: "successful response"
            schema:
              $ref: "#/definitions/VirtualService"
    /api/services/{id}/toggle:
      post:
        description: "toggles a virtual service on / off"
        operationId: "toggleVirtualService"
        tags:
          - services
        produces:
          - "application/json"
        parameters:
          -
            name: "id"
            in: "path"
            description: "ID of service to update"
            required: true
            type: integer
            format: "int64"
          -
            name: "x-access-token"
            description: "your access token"
            in: "header"
            type: string
        responses:
          "200":
            description: "toggle response"
            schema:
              $ref: "#/definitions/ToggleResponse"
    /services/sut/{name}:
      get:
        description: "retrieves virtual services by system under test"
        operationId: "getVirtualServicesBySUT"
        tags:
          - services
        produces:
          - "application/json"
        parameters:
          -
            name: "name"
            in: "path"
            description: "name of system under test"
            required: true
            type: string
        responses:
          "200":
            description: "successful response"
            schema:
              type: array
              items:
                type: object
                $ref: "#/definitions/VirtualService"
    /services/user/{name}:
      get:
        description: "retrieves virtual services by owner"
        operationId: "getVirtualServicesByOwner"
        tags:
          - services
        produces:
          - "application/json"
        parameters:
          -
            name: "name"
            in: "path"
            description: "name of user / owner"
            required: true
            type: string
        responses:
          "200":
            description: "successful response"
            schema:
              type: array
              items:
                type: object
                $ref: "#/definitions/VirtualService"
    /systems:
      get:
        description: "retrieves all systems under test"
        operationId: "getSystemsUnderTest"
        tags:
          - systems
        produces:
          - "application/json"
        responses:
          "200":
            description: "successful response"
            schema:
              type: array
              items:
                type: object
                $ref: "#/definitions/SystemUnderTest"
      post:
        description: "creates a new system under test"
        operationId: "addSystemUnderTest"
        tags:
          - systems
        produces:
          - "application/json"
        parameters:
          -
            name: "sut"
            description: "the SUT to create"
            in: "body"
            schema:
                $ref: "#/definitions/SystemUnderTest"
        responses:
          "200":
            description: "successful response"
            schema:
              $ref: "#/definitions/SystemUnderTest"
    /users:
      get:
        description: "retrieves all users"
        operationId: "getUsers"
        tags:
          - users
        produces:
          - "application/json"
        responses:
          "200":
            description: "successful response"
            schema:
              type: array
              items:
                type: object
                $ref: "#/definitions/UserDetails"

  definitions:
    AuthReq:
      type: object
      properties:
        username:
          type: string
          required: true
        password:
          type: string
          required: true
    AuthRes:
      type: object
      properties:
        success:
          type: boolean
        token:
          type: string
        message:
          type: string
    VirtualService:
      type: object
      properties:
        sut:
          type: object
          allOf:
            - $ref: "#/definitions/SystemUnderTest"
        user:
          type: object
          allOf:
            - $ref: "#/definitions/UserDetails"
        name:
          type: string
        type:
          type: string
        basePath:
          type: string
        rrpairs:
          type: array
          items:
            type: object
            $ref: "#/definitions/ReqResPair"
        running:
          type: boolean
    SystemUnderTest:
      type: object
      properties:
        name:
          type: string
    ReqResPair:
      type: object
      properties:
        verb:
          type: string
        path:
          type: string
        payloadType:
          type: string
        reqHeaders:
          type: object
        reqData:
          type: object
        resStatus:
          type: integer
        resHeaders:
          type: object
        resData:
          type: object
    UserDetails:
      type: object
      properties:
        uid:
          type: string
        mail:
          type: string
    ToggleResponse:
      type: object
      properties:
        message:
          type: string
        service:
          type: object
          allOf:
            - $ref: "#/definitions/VirtualService"
